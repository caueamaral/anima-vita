{"version":3,"sources":["components/Header/styles.js","components/Header/index.js","components/Card/styles.js","components/Card/index.js","components/Main/styles.js","components/Main/index.js","components/Footer/styles.js","components/Footer/index.js","GlobalStyle.js","App.js","index.js"],"names":["HeaderWrapper","styled","header","Header","className","CardWrapper","section","Card","useState","cards","setCards","useEffect","axios","get","headers","then","response","data","renderIdiom","title","idiom","map","card","attributes","medium","posterImage","canonicalTitle","description","titles","src","alt","substring","en","en_jp","ja_jp","id","MainWrapper","main","Main","FooterWrapper","footer","Footer","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAwCeA,EAtCOC,IAAOC,OAAV,woB,OCaJC,I,EAAAA,EAbf,WACE,OACE,eAAC,EAAD,WACE,+BACE,sBAAMC,UAAU,QAAhB,mBAAoC,sBAAMA,UAAU,OAAhB,qBAEtC,oDACoB,wCADpB,QACwC,+C,yBC2B/BC,EAlCKJ,IAAOK,QAAV,mkBC2DFC,I,EAAAA,EAzDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAECC,qBAAU,WAITC,IACGC,IAJgB,kCAIJ,CAAEC,QAHE,CAAC,OAAU,2BAA4B,eAAgB,8BAIvEC,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAASC,KAAKA,WAC1C,IAEH,IAAMC,EAAc,SAACC,EAAOC,GAC1B,GAAIA,EACF,OACE,qCACE,mCAASD,EAAT,QAA2BC,MAMnC,OACE,cAAC,EAAD,UACGX,EAAMY,KAAI,SAAAC,GACT,MAKIA,EAAKC,WAJOC,EADhB,EACEC,YAAcD,OACdE,EAFF,EAEEA,eACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,OAGF,OACE,oCACE,iCACE,4BACE,qBAAKC,IAAKL,EAAQM,IAAKJ,QAG3B,6BACGA,IAEH,8BACGC,EAAYI,UAAU,EAAG,KAD5B,SAGA,kCACGb,EAAY,KAASU,EAAOI,IAD/B,MACsC,uBACnCd,EAAY,QAASU,EAAOK,OAAO,uBACnCf,EAAY,QAASU,EAAOM,YAfnBZ,EAAKa,UC7BdC,EANKnC,IAAOoC,KAAV,kGCSFC,I,EAAAA,EARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCcSC,EAlBOtC,IAAOuC,OAAV,6RCWJC,I,EAAAA,EAXf,WACE,OACE,cAAC,EAAD,UACE,mCACE,sBAAMrC,UAAU,QAAhB,mBACA,sBAAMA,UAAU,OAAhB,kBAFF,qCC8CSsC,EAjDKC,YAAH,olCCcFC,MAXf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d11f40e.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst HeaderWrapper = styled.header`\n  align-items: center;\n  font-family: var(--titleFont);\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  text-align: center;\n\n  h1 {\n    background: var(--white);\n    border-radius: var(--rounded);\n    font-size: 38px;\n    letter-spacing: 3px;\n    padding: 15px 25px;\n\n    .green {\n      color: var(--green);\n    }\n\n    .blue {\n      color: var(--blue);\n    }\n  }\n\n  h2 {\n    background: var(--white);\n    border-radius: var(--rounded);\n    font-size: 18px;\n    letter-spacing: 1px;\n    margin-top: 15px;\n    padding: 10px 20px;\n  }\n\n  em {\n    color: var(--gray);\n  }\n`\n\nexport default HeaderWrapper","import HeaderWrapper from './styles.js'\n\nfunction Header() {\n  return (\n    <HeaderWrapper>\n      <h1>\n        <span className=\"green\">Anima</span><span className=\"blue\">Vita</span>\n      </h1>\n      <h2>\n        Online query with <em>animes</em> and <em>mangas</em>\n      </h2>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header","import styled from 'styled-components'\n\nconst CardWrapper = styled.section`\n  display: grid;\n  grid-gap: 40px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n\n  article {\n    background: var(--white);\n    border-radius: var(--rounded);\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, .15);\n    padding: 20px;\n  }\n\n  img {\n    border-radius: var(--rounded);\n    width: 100%;\n  }\n\n  h3 {\n    font-family: var(--title-font);\n    font-size: 16px;\n    letter-spacing: 1px;\n    margin-top: 10px;\n  }\n\n  p {\n    margin-top: 10px;\n  }\n\n  small {\n    display: block;\n    margin-top: 10px;\n  }\n`\n\nexport default CardWrapper","import { useEffect, useState } from 'react'\nimport axios                   from 'axios'\nimport CardWrapper             from './styles.js'\n\nfunction Card() {\n  const [cards, setCards] = useState([])\n\n   useEffect(() => {\n    const apiUrl     = 'https://kitsu.io/api/edge/anime'\n    const apiHeaders = {'Accept': 'application/vnd.api+json', 'Content-Type': 'application/vnd.api+json'}\n\n    axios\n      .get(apiUrl, { headers: apiHeaders })\n      .then(response => setCards(response.data.data))\n  }, [])\n\n  const renderIdiom = (title, idiom) => {\n    if (idiom) {\n      return (\n        <>\n          <strong>{title}: </strong>{idiom}\n        </>\n      )\n    }\n  }\n\n  return (\n    <CardWrapper>\n      {cards.map(card => {\n        let {\n          posterImage: {medium},\n          canonicalTitle,\n          description,\n          titles\n        } = card.attributes\n\n        return (\n          <article key={card.id}>\n            <figure>\n              <p>\n                <img src={medium} alt={canonicalTitle} />\n              </p>\n            </figure>\n            <h3>\n              {canonicalTitle}\n            </h3>\n            <p>\n              {description.substring(0, 150)}...\n            </p>\n            <small>\n              {renderIdiom('En',    titles.en)}   <br />\n              {renderIdiom('En Jp', titles.en_jp)}<br />\n              {renderIdiom('Ja Jp', titles.ja_jp)}\n            </small>\n          </article>\n        )\n      })}\n    </CardWrapper>\n  )\n}\n\nexport default Card","import styled from 'styled-components'\n\nconst MainWrapper = styled.main`\n  margin: 60px 0;\n  max-width: calc(100% - 80px);\n  width: 1600px;\n`\n\nexport default MainWrapper","import Card        from '../Card/index.js'\nimport MainWrapper from './styles.js'\n\nfunction Main() {\n  return (\n    <MainWrapper>\n      <Card />\n    </MainWrapper>\n  )\n}\n\nexport default Main","import styled from 'styled-components'\n\nconst FooterWrapper = styled.footer`\n  background: var(--white);\n  font-family: var(--titleFont);\n  font-size: 18px;\n  letter-spacing: 1px;\n  padding: 30px 20px;\n  text-align: center;\n  width: 100%;\n\n  .green {\n    color: var(--green);\n  }\n\n  .blue {\n    color: var(--blue);\n  }\n`\n\nexport default FooterWrapper","import FooterWrapper from './styles.js'\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <strong>\n        <span className=\"green\">Anima</span>\n        <span className=\"blue\">Vita</span> 2021 - All rights reserved.\n      </strong>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span,\n  h1, h2, h3, h4, h5, h6, p,\n  a, abbr, acronym, address,\n  del, em, img, ins, strong, sub, sup,\n  u, i, dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend, input, select,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, section, summary {\n    border: 0;\n    box-sizing: border-box;\n    margin: 0;\n    outline: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n  }\n\n  html,\n  input,\n  select {\n    font: 14px/1.5em Verdana;\n  }\n\n  :root {\n    --white:    #fff;\n    --green:    #42cca2;\n    --blue:     #185b9d;\n    --gray:     #999;\n    --lightGray:#eee;\n    --rounded:  5px;\n    --titleFont:'Patrick Hand';\n  }\n\n  .app {\n    background: linear-gradient(to right, var(--green), var(--blue));\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    min-height: 100vh;\n  }\n`\n\nexport default GlobalStyle","import Header      from './components/Header/index.js'\nimport Main        from './components/Main/index.js'\nimport Footer      from './components/Footer/index.js'\nimport GlobalStyle from './GlobalStyle.js'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main />\n      <Footer />\n      <GlobalStyle />\n    </div>\n  );\n}\n\nexport default App","import React    from 'react'\nimport ReactDOM from 'react-dom'\nimport App      from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}